##.title
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##
## X|Y|Z & Dev
##
## Copyright Ⓒ Robert Mollentze, xyzand.dev
## 
## Licensing details can be found in the LICENSE file in the root directory.
## 
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##.title~

name: Create Release from Release Branch

## -----------------------------------------------------------------------------

on:
  push:
    branches:
      - release

## -----------------------------------------------------------------------------

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Fetch the full git history so tags are included
          fetch-depth: 0

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1.2

      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          echo "Extracting version from pubspec.yaml..."
          VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
          echo "::set-output name=version::$VERSION"
          echo "Version: $VERSION"

      - name: Extract release notes from CHANGELOG.md
        id: get_release_notes
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          RELEASE_NOTES=$(awk -v version="$VERSION" 'BEGIN {print_flag=0;} /## \['version'\]/ {print_flag=1; next} /## \[/ {print_flag=0} print_flag {print}' CHANGELOG.md)
          echo "Release notes for version $VERSION: $RELEASE_NOTES"
          echo "::set-output name=release-notes::$(echo "$RELEASE_NOTES" | sed ':a;N;$!ba;s/\n/%0A/g')"

      - name: Create Tag and Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          RELEASE_NOTES=${{ steps.get_release_notes.outputs.release-notes }}
          echo "Creating tag and release for version $VERSION"
          
          # Create Git tag
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag $VERSION
          git push origin $VERSION
          
          # Create GitHub Release
          gh release create $VERSION \
            --title "Release $VERSION" \
            --notes "$RELEASE_NOTES" \
            --draft

